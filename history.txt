    
https://aws.amazon.com/jp/blogs/apn/aws-lambda-custom-runtime-for-php-a-practical-example/

    1  php -v
    2  python -v
    3  sudo yum -y update
    4  sudo yum install autoconf bison gcc gcc-c++ libcurl-devel libxml2-devel -y
    5  curl -sL http://www.openssl.org/source/openssl-1.0.1k.tar.gz | tar -xvz
    6  cd openssl-1.0.1k/
    7  ./config && make && sudo make install
    8  mkdir ~/php-7-bin
    9  curl -sL https://github.com/php/php-src/archive/php-7.3.0.tar.gz | tar -xvz
   10  cd php-src-php-7.3.0/
   11  ./buildconf --force
   12  ./configure --prefix=/home/ec2-user/php-7-bin/ --with-openssl=/usr/local/ssl --with-curl --with-zlib
   13  make install
   14  cd
   15  mkdir -p ~/php-example/{bin,src}/
   16  cd php-example/
   17  touch ./src/{hello,goodbye}.php
   18  touch ./bootstrap && chmod +x ./bootstrap
   19  cp ~/php-7-bin/bin/php ./bin
   20  ll
   21  .bin/php -v
   22  ./bin/php -v
   23  curl -sS https://getcomposer.org/installer | ./bin/php
   24  ./bin/php composer.phar require guzzlehttp/guzzle
   25  ll
   26  vi bootstrap 
   27  vi src/hello.php
   28  vi src/goodbye.php
   29  zip -r runtime.zip bin bootstrap
   30  zip -r vendor.zip vendor/
   31  ll
   32  zip hello.zip src/hello.php
   33  zip goodbye.zip src/goodbye.php
   34  sudo pip install --upgrade awscli
   35  sudo yum -y install python3
   36  aws lambda publish-layer-version     --layer-name php-example-runtime     --zip-file fileb://runtime.zip     --region us-east-1
   37  aws configure
   38  aws lambda publish-layer-version     --layer-name php-example-runtime     --zip-file fileb://runtime.zip     --region us-east-1
   39  aws lambda publish-layer-version     --layer-name php-example-vendor     --zip-file fileb://vendor.zip     --region us-east-1
   40  aws lambda create-function     --function-name php-example-hello11     --handler hello     --zip-file fileb://./hello.zip     --runtime provided     --role "arn:aws:iam::816340862232:role/service-role/LambdaPhpExample"     --region us-east-1     --layers "arn:aws:lambda:us-east-1:816340862232:layer:php-example-runtime:8"           "arn:aws:lambda:us-east-1:816340862232:layer:php-example-vendor:2"
   41  aws lambda invoke     --function-name php-example-hello11     --region us-east-1     --log-type Tail     --query 'LogResult'     --output text     --payload '{"name": "World"}' hello-output.txt | base64 --decode
   42  ll
   43  cat hello-output.txt 
   44  ll
   45  vi src/hello.php 
   46  rm hello.zip 
   47  zip hello.zip src/hello.php
   48  aws lambda create-function     --function-name php-example-hello11     --handler hello     --zip-file fileb://./hello.zip     --runtime provided     --role "arn:aws:iam::816340862232:role/service-role/LambdaPhpExample"     --region us-east-1     --layers "arn:aws:lambda:us-east-1:816340862232:layer:php-example-runtime:8"           "arn:aws:lambda:us-east-1:816340862232:layer:php-example-vendor:2"
   49  aws lambda create-function     --function-name php-example-hello12     --handler hello     --zip-file fileb://./hello.zip     --runtime provided     --role "arn:aws:iam::816340862232:role/service-role/LambdaPhpExample"     --region us-east-1     --layers "arn:aws:lambda:us-east-1:816340862232:layer:php-example-runtime:8"           "arn:aws:lambda:us-east-1:816340862232:layer:php-example-vendor:2"
   50  ll
   51  history > history.txt
